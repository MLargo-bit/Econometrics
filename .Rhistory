data(cars)
View(cars)
View(cars)
data(starwars)
library(dplyr)
data(starwars)
cite(dplyr)
citation(dplyr)
citation('dplyr')
view(starwars)
View(starwars)
library(TSstudio)
install.packages("TSstudio")
library(TSstudio)
data(AirPassengers)
citation('datasets')
AirPassengers
df<-as.data.frame()
df<-data.frame()
df$year<-sample(rep(c(2023,2022),250))
df<-data.frame(observation=character(),
year=character(),
price=double(),
income=double())
df$year<-sample(rep(c(2023,2022),250))
year=sample(rep(c(2023,2022),250),
df<-data.frame(observation=character(),
year=sample(rep(c(2023,2022),250)),
price=double(),
income=double())
df<-data.frame(observation=character(),
df<-data.frame(observation=character(),
year=sample(rep(c(2023,2022),250)),
price=double(),
income=double())
sample(rep(c(2023,2022),250))
df<-data.frame(observation=character(),
year=sample(rep(c(2023,2022),250)),
price=double(),
income=double())
rnorm(10)
set.seed(123)
sample(rnorm(4, mean=0, sd=1),500, replace=T)
sample(rnorm(4, mean=100000, sd=1),500, replace=T)
sample(rnorm(4, mean=100000, sd=50000),500, replace=T)
df<-data.frame(observation=character(),
year=sample(rep(c(2023,2022),250)),
price=sample(rnorm(4, mean=100000, sd=50000),500, replace=T),
income=sample(rnorm(4, mean=70000, sd=5000),500, replace=T))
df<-data.frame(observation=seq(from=1, to = 500),
year=sample(rep(c(2023,2022),250)),
price=sample(rnorm(4, mean=100000, sd=50000),500, replace=T),
income=sample(rnorm(4, mean=70000, sd=5000),500, replace=T))
View(df)
df
rep(c(2023),250)
df<-data.frame(observation=seq(from=1, to = 500),
year=c(rep(2022,250),rep(2023,250)),
price=sample(rnorm(4, mean=100000, sd=50000),500, replace=T),
income=sample(rnorm(4, mean=70000, sd=5000),500, replace=T))
View(df)
tail(df)
head(df)
gapminder
install.packages("gapminder")
library(gapminder)
gapminder
head(gapminder)
citation('gapminder')
knitr::include_graphics("./images/spacial/coor_pol_car.PNG")
library(sf)
library(sf)
library(tidyverse)
library(tidyverse)
library(tidycensus)
install.packages('tidycensus')
library(tidycensus)
library(corrr)
install.packages('corrr')
library(corrr)
library(tmap)
install.packages('tmap')
library(tmap)
library(spdep)
library(tigris)
library(rmapshaper)
install.packages('rmapshaper')
library(rmapshaper)
library(flextable)
install.packages('flextable')
library(flextable)
library(car)
library(spatialreg)
library(stargazer)
# Bring in census tract data.
wa.tracts <- get_acs(geography = "tract",
year = 2019,
variables = c(tpop = "B01003_001", tpopr = "B03002_001",
nhwhite = "B03002_003", nhblk = "B03002_004",
nhasn = "B03002_006", hisp = "B03002_012",
unemptt = "B23025_003", unemp = "B23025_005",
povt = "B17001_001", pov = "B17001_002",
colt = "B15003_001", col1 = "B15003_022",
col2 = "B15003_023", col3 = "B15003_024",
col4 = "B15003_025", mobt = "B07003_001",
mob1 = "B07003_004"),
state = "WA",
survey = "acs5",
output = "wide",
geometry = TRUE)
# calculate percent race/ethnicity, and keep essential vars.
wa.tracts <- wa.tracts %>%
rename_with(~ sub("E$", "", .x), everything()) %>%  #removes the E
mutate(pnhwhite = 100*(nhwhite/tpopr), pnhasn = 100*(nhasn/tpopr),
pnhblk = 100*(nhblk/tpopr), phisp = 100*(hisp/tpopr),
unempr = 100*(unemp/unemptt),
ppov = 100*(pov/povt),
pcol = 100*((col1+col2+col3+col4)/colt),
pmob = 100-100*(mob1/mobt)) %>%
dplyr::select(c(GEOID,tpop, pnhwhite, pnhasn, pnhblk, phisp, ppov,
unempr, pcol, pmob))
# Bring in city boundary data
pl <- places(state = "WA", year = 2019, cb = TRUE)
# Keep Seattle city
sea.city <- filter(pl, NAME == "Seattle")
#Clip tracts using Seattle boundary
sea.tracts <- ms_clip(target = wa.tracts, clip = sea.city, remove_slivers = TRUE)
#reproject to UTM NAD 83
sea.tracts <-st_transform(sea.tracts,
crs = "+proj=utm +zone=10 +datum=NAD83 +ellps=GRS80")
cdcfile <- read_csv("https://raw.githubusercontent.com/crd230/data/master/PLACES_WA_2022_release.csv")
View(cdcfile)
View(sea.tracts)
sea.tracts <- sea.tracts %>%
mutate(GEOID = as.numeric(GEOID)) %>%
left_join(cdcfile, by = "GEOID")
sea.tracts %>%
select(DEP_CrudePrev, unempr, pmob, pcol, ppov, pnhblk, phisp, tpop) %>%
st_drop_geometry() %>%
summary()
cor.table <- sea.tracts %>%
dplyr::select(-GEOID) %>%
st_drop_geometry() %>%
correlate()
cor.table
sea.tracts %>%
ggplot() +
geom_histogram(aes(x=DEP_CrudePrev)) +
xlab("Crude prevalance of depression")
fit.ols.simple <- lm(DEP_CrudePrev ~ ppov, data = sea.tracts)
summary(fit.ols.simple)
fit.ols.multiple <- lm(DEP_CrudePrev ~ unempr + pmob + pcol + ppov + pnhblk +
phisp + log(tpop), data = sea.tracts)
summary(fit.ols.multiple)
qqPlot(fit.ols.multiple)
plot(resid(fit.ols.multiple))
tm_shape(sea.tracts, unit = "mi") +
tm_polygons(col = "DEP_CrudePrev", style = "quantile",palette = "Reds",
border.alpha = 0, title = "") +
tm_scale_bar(breaks = c(0, 2, 4), text.size = 1, position = c("right", "bottom")) +
tm_layout(main.title = "Poor Mental Health Prevalence, Seattle 2017 ",  main.title.size = 0.95, frame = FALSE, legend.outside = TRUE,
attr.outside = TRUE)
seab<-poly2nb(sea.tracts, queen=T)
seaw<-nb2listw(seab, style="W", zero.policy = TRUE)
moran.plot(as.numeric(scale(sea.tracts$DEP_CrudePrev)), listw=seaw,
xlab="Standardized Depression Prevalence",
ylab="Neighbors Standardized Depression Prevalence",
main=c("Moran Scatterplot for Depression Prevalence", "in Seatte") )
moran.mc(sea.tracts$DEP_CrudePrev, seaw, nsim=999)
lm.morantest(fit.ols.multiple, seaw)
fit.lag<-lagsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw)
summary(fit.lag)
fit.lag.effects <- impacts(fit.lag, listw = seaw, R = 999)
fit.lag.effects
summary(fit.lag.effects, zstats = TRUE, short = TRUE)
library(sf)
nc<-read_sf()
fit.err<-errorsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw)
summary(fit.err)
library(sf)
library(tidyverse)
library(tidycensus)
library(corrr)
library(tmap)
library(spdep)
library(tigris)
library(rmapshaper)
library(flextable)
library(car)
library(spatialreg)
library(stargazer)
# Bring in census tract data.
wa.tracts <- get_acs(geography = "tract",
year = 2019,
variables = c(tpop = "B01003_001", tpopr = "B03002_001",
nhwhite = "B03002_003", nhblk = "B03002_004",
nhasn = "B03002_006", hisp = "B03002_012",
unemptt = "B23025_003", unemp = "B23025_005",
povt = "B17001_001", pov = "B17001_002",
colt = "B15003_001", col1 = "B15003_022",
col2 = "B15003_023", col3 = "B15003_024",
col4 = "B15003_025", mobt = "B07003_001",
mob1 = "B07003_004"),
state = "WA",
survey = "acs5",
output = "wide",
geometry = TRUE)
# calculate percent race/ethnicity, and keep essential vars.
wa.tracts <- wa.tracts %>%
rename_with(~ sub("E$", "", .x), everything()) %>%  #removes the E
mutate(pnhwhite = 100*(nhwhite/tpopr), pnhasn = 100*(nhasn/tpopr),
pnhblk = 100*(nhblk/tpopr), phisp = 100*(hisp/tpopr),
unempr = 100*(unemp/unemptt),
ppov = 100*(pov/povt),
pcol = 100*((col1+col2+col3+col4)/colt),
pmob = 100-100*(mob1/mobt)) %>%
dplyr::select(c(GEOID,tpop, pnhwhite, pnhasn, pnhblk, phisp, ppov,
unempr, pcol, pmob))
# Bring in city boundary data
pl <- places(state = "WA", year = 2019, cb = TRUE)
# Keep Seattle city
sea.city <- filter(pl, NAME == "Seattle")
#Clip tracts using Seattle boundary
sea.tracts <- ms_clip(target = wa.tracts, clip = sea.city, remove_slivers = TRUE)
#reproject to UTM NAD 83
sea.tracts <-st_transform(sea.tracts,
crs = "+proj=utm +zone=10 +datum=NAD83 +ellps=GRS80")
cdcfile <- read_csv("https://raw.githubusercontent.com/crd230/data/master/PLACES_WA_2022_release.csv")
sea.tracts <- sea.tracts %>%
mutate(GEOID = as.numeric(GEOID)) %>%
left_join(cdcfile, by = "GEOID")
sea.tracts %>%
select(DEP_CrudePrev, unempr, pmob, pcol, ppov, pnhblk, phisp, tpop) %>%
st_drop_geometry() %>%
summary()
cor.table <- sea.tracts %>%
dplyr::select(-GEOID) %>%
st_drop_geometry() %>%
correlate()
cor.table
sea.tracts %>%
ggplot() +
geom_histogram(aes(x=DEP_CrudePrev)) +
xlab("Crude prevalance of depression")
fit.ols.simple <- lm(DEP_CrudePrev ~ ppov, data = sea.tracts)
summary(fit.ols.simple)
fit.ols.multiple <- lm(DEP_CrudePrev ~ unempr + pmob + pcol + ppov + pnhblk +
phisp + log(tpop), data = sea.tracts)
summary(fit.ols.multiple)
qqPlot(fit.ols.multiple)
plot(resid(fit.ols.multiple))
tm_shape(sea.tracts, unit = "mi") +
tm_polygons(col = "DEP_CrudePrev", style = "quantile",palette = "Reds",
border.alpha = 0, title = "") +
tm_scale_bar(breaks = c(0, 2, 4), text.size = 1, position = c("right", "bottom")) +
tm_layout(main.title = "Poor Mental Health Prevalence, Seattle 2017 ",  main.title.size = 0.95, frame = FALSE, legend.outside = TRUE,
attr.outside = TRUE)
sea.tracts <- sea.tracts %>%
mutate(olsresid = resid(fit.ols.multiple))
tm_shape(sea.tracts, unit = "mi") +
tm_polygons(col = "olsresid", style = "quantile",palette = "Reds",
border.alpha = 0, title = "") +
tm_scale_bar(breaks = c(0, 2, 4), text.size = 1, position = c("right", "bottom")) +
tm_layout(main.title = "Residuals from linear regression in Seattle Tracts",  main.title.size = 0.95, frame = FALSE, legend.outside = TRUE,
attr.outside = TRUE)
seab<-poly2nb(sea.tracts, queen=T)
seaw<-nb2listw(seab, style="W", zero.policy = TRUE)
moran.plot(as.numeric(scale(sea.tracts$DEP_CrudePrev)), listw=seaw,
xlab="Standardized Depression Prevalence",
ylab="Neighbors Standardized Depression Prevalence",
main=c("Moran Scatterplot for Depression Prevalence", "in Seatte") )
moran.mc(sea.tracts$DEP_CrudePrev, seaw, nsim=999)
lm.morantest(fit.ols.multiple, seaw)
moran.mc(sea.tracts$DEP_CrudePrev, seaw, nsim=999)
lm.LMtests(fit.ols.multiple, seaw, test='all')
lm.RStests(fit.ols.multiple, seaw, test='all')
reg2<-lmSLX(DEP_CrudePrev ~ unempr + pmob + pcol + ppov + pnhblk +
phisp + log(tpop), data = sea.tracts, seaw)
summary(reg2)
lmSLX(DEP_CrudePrev ~ unempr + pmob + pcol + ppov + pnhblk +
phisp + log(tpop), data = sea.tracts, seaw)
summary(reg2)
impacts(reg2, listw=seaw)
summary(impacts(reg2, listw=seaw))
summary(impacts(reg2, listw=seaw), zstats=TRUE)
lmSLX
reg3<- lagsarlm(DEP_CrudePrev ~ unempr + pmob + pcol + ppov + pnhblk +
phisp + log(tpop), data = sea.tracts, seaw)
summary(reg3)
impacts(reg3, seaw)
impacts(reg3, listw=seaw)
summary(impacts(reg3, listw=seaw, R=500), zstats=TRUE)
summary(impacts(reg3, listw=seaw, R=500), zstats=TRUE)
fit.err<-errorsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw)
summary(fit.err)
Hausman.test(fit.err)
reg3<- lagsarlm(DEP_CrudePrev ~ unempr + pmob + pcol + ppov + pnhblk +
phisp + log(tpop), data = sea.tracts, seaw)
summary(reg3)
W <- as(rwm_n, "CsparseMatrix")
trMC <- trW(W, type="MC")
reg5<-errorsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, etype='emixed')
summary(reg5)
reg6<-lagsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, etype='mixed')
reg6<-lagsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, type='mixed')
reg7<-sacsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, type='sacmixed')
reg8<-sacsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, type='sac')
summary(reg8)
reg5<-errorsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, etype='emixed')
summary(reg5)
reg6<-lagsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, type='mixed')
summary(reg6)
reg7<-sacsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, type='sacmixed')
summary(reg7)
reg8<-sacsarlm(DEP_CrudePrev ~ unempr + pmob+ pcol + ppov + pnhblk  +
phisp + log(tpop),
data = sea.tracts,
listw = seaw, type='sac')
summary(reg8)
summary(impacts(reg5))
summary(impacts(reg5, listw=seaw), zstats=TRUE)
LR.Sarlm(reg5, fit.err)
LR.Sarlm(reg5, reg2)
LR.Sarlm(reg6, reg2)
bptest.Sarlm(reg5, studentize=TRUE)
data(columbus)
library(spatialreg)
data(columbus)
force(columbus)
force(bbs)
View(columbus)
force(coords)
force(polys)
force(col.gal.nb)
View(polys)
library(mapview)
mapview(polys)
mapview(columbus)
citation(sf)
library(sf)
citation(sf)
citation('sf')
print(citation('sf'), bibtex=TRUE)
library(tidyverse)
library(sf)
system.file("gpkg/nc.gpkg", package="sf") |>
read_sf() -> nc
nc.32119 <- st_transform(nc, 'EPSG:32119')
nc.32119 |>
select(BIR74) |>
plot(graticule = TRUE, axes = TRUE)
View(nc)
system.file("gpkg/nc.gpkg", package="sf") |>
read_sf() -> nc
View(nc.32119)
library(stars)
par(mfrow = c(2, 2))
par(mar = rep(1, 4))
tif <- system.file("tif/L7_ETMs.tif", package = "stars")
x <- read_stars(tif)[,,,1]
image(x, main = "(a)")
image(x[,1:10,1:10], text_values = TRUE, border = 'grey', main = "(b)")
image(x, main = "(c)")
set.seed(131)
pts <- st_sample(st_as_sfc(st_bbox(x)), 3)
plot(pts, add = TRUE, pch = 3, col = 'blue')
image(x, main = "(d)")
plot(st_buffer(pts, 500), add = TRUE, pch = 3, border = 'blue', col = NA, lwd = 2)
par(mfrow = c(2, 2))
par(mar = rep(1, 4))
tif <- system.file("tif/L7_ETMs.tif", package = "stars")
x <- read_stars(tif)[,,,1]
image(x, main = "(a)")
image(x[,1:10,1:10], text_values = TRUE, border = 'grey', main = "(b)")
image(x, main = "(c)")
set.seed(131)
pts <- st_sample(st_as_sfc(st_bbox(x)), 3)
plot(pts, add = TRUE, pch = 3, col = 'blue')
image(x, main = "(d)")
plot(st_buffer(pts, 500), add = TRUE, pch = 3, border = 'blue', col = NA, lwd = 2)
9+9+9+9+7
knitr::include_graphics(".\02-cross-sec\PRF.png")
knitr::include_graphics("./02-cross-sec/PRF.png")
library(readxl)
homelessness <- read_excel("data_collection.xlsx")
